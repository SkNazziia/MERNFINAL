{"ast":null,"code":"import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import{connect}from\"react-redux\";const PrivateRoute=_ref=>{let{component:Component,auth,...rest}=_ref;return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:props=>auth.isAuthenticated===true?/*#__PURE__*/React.createElement(Component,props):/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"})}));};const mapStateToProps=state=>({auth:state.auth});export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"names":["React","Route","Redirect","connect","PrivateRoute","_ref","component","Component","auth","rest","createElement","Object","assign","render","props","isAuthenticated","to","mapStateToProps","state"],"sources":["C:/Users/LOKESH/Desktop/new/JobsPlanet-MERN-App-master/frontend/src/components/private-route/PrivateRoute.js"],"sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n    {...rest}\n    render={props =>\n        auth.isAuthenticated === true ? (\n        <Component {...props} />\n        ) : (\n        <Redirect to=\"/login\" />\n        )\n    }\n    />\n);\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAClD,OAASC,OAAO,KAAQ,aAAa,CAErC,KAAM,CAAAC,YAAY,CAAGC,IAAA,MAAC,CAAEC,SAAS,CAAEC,SAAS,CAAEC,IAAI,CAAE,GAAGC,IAAK,CAAC,CAAAJ,IAAA,oBACzDL,KAAA,CAAAU,aAAA,CAACT,KAAK,CAAAU,MAAA,CAAAC,MAAA,IACFH,IAAI,EACRI,MAAM,CAAEC,KAAK,EACTN,IAAI,CAACO,eAAe,GAAK,IAAI,cAC7Bf,KAAA,CAAAU,aAAA,CAACH,SAAS,CAAKO,KAAQ,CAAC,cAExBd,KAAA,CAAAU,aAAA,CAACR,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAAE,CAE1B,EACA,CAAC,EACL,CAID,KAAM,CAAAC,eAAe,CAAGC,KAAK,GAAK,CAC9BV,IAAI,CAAEU,KAAK,CAACV,IAChB,CAAC,CAAC,CAEF,cAAe,CAAAL,OAAO,CAACc,eAAe,CAAC,CAACb,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}